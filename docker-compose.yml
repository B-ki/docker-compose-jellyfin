version: "3.9"
services:

  nginx-proxy:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx
    restart: unless-stopped
    ports:
      - '40080:80'
      - '40081:81'
      - '40443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    networks:
      - nginx-network

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: unless-stopped
    user: 1000:1000
    volumes:
      - ./jellyfin:/config
      - /mnt/data/media/:/media
    networks: 
      - nginx-network
      - jellyfin-network
    ports:
      - '8096:8096'

  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./sonarr:/config
      - ${DATA_ROOT}:/data
      - '/var/run/docker.sock:/var/run/docker.sock'
    restart: unless-stopped
    ports:
       - "8989:8989"
    networks: 
      - nginx-network
      - arr-network

  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./radarr:/config
      - ${DATA_ROOT}:/data
      - '/var/run/docker.sock:/var/run/docker.sock'
    restart: unless-stopped
    ports:
      - "7878:7878"
    networks: 
      - nginx-network
      - arr-network

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./prowlarr:/config
      - '/var/run/docker.sock:/var/run/docker.sock'
    restart: unless-stopped
    ports:
      - "9696:9696"
    networks: 
      - nginx-network
      - arr-network

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:libtorrentv1
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - WEBUI_PORT=8080
    volumes:
      - ./qbittorrent:/config
      - ${DOWNLOAD_ROOT}:/data/torrents
      - '/var/run/docker.sock:/var/run/docker.sock'
    restart: unless-stopped
    ports:
      - 8080:8080
    networks: 
      - nginx-network
      - arr-network
    depends_on:
      vpn:
        condition: service_healthy

networks:
  nginx-network:
    driver: bridge
  jellyfin-network:
    driver: bridge
  arr-network:
    driver: bridge

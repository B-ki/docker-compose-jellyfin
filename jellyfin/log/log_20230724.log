[2023-07-24 02:00:00.003 +02:00] [INF] [42] Emby.Server.Implementations.ScheduledTasks.TaskManager: "DailyTrigger" fired for task: "Extraire les images de chapitre"
[2023-07-24 02:00:00.005 +02:00] [INF] [42] Emby.Server.Implementations.ScheduledTasks.TaskManager: Queuing task "ChapterImagesTask"
[2023-07-24 02:00:00.006 +02:00] [INF] [63] Emby.Server.Implementations.ScheduledTasks.TaskManager: Executing "Extraire les images de chapitre"
[2023-07-24 02:00:00.026 +02:00] [INF] [63] Emby.Server.Implementations.ScheduledTasks.TaskManager: "Extraire les images de chapitre" Completed after 0 minute(s) and 0 seconds
[2023-07-24 02:00:00.027 +02:00] [INF] [63] Emby.Server.Implementations.ScheduledTasks.TaskManager: ExecuteQueuedTasks
[2023-07-24 02:00:01.006 +02:00] [INF] [63] Emby.Server.Implementations.ScheduledTasks.TaskManager: Daily trigger for "Extraire les images de chapitre" set to fire at 2023-07-25 02:00:00.000 +02:00, which is 23:59:58.9930902 from now.
[2023-07-24 07:08:13.874 +02:00] [INF] [58] Emby.Server.Implementations.ScheduledTasks.TaskManager: "IntervalTrigger" fired for task: "Scanner la médiathèque"
[2023-07-24 07:08:13.875 +02:00] [INF] [58] Emby.Server.Implementations.ScheduledTasks.TaskManager: Queuing task "RefreshMediaLibraryTask"
[2023-07-24 07:08:13.876 +02:00] [INF] [63] Emby.Server.Implementations.ScheduledTasks.TaskManager: Executing "Scanner la médiathèque"
[2023-07-24 07:08:13.899 +02:00] [INF] [63] Emby.Server.Implementations.IO.LibraryMonitor: Stopping directory watching for path "/data/media"
[2023-07-24 07:08:13.921 +02:00] [INF] [63] Emby.Server.Implementations.Library.LibraryManager: Validating media library
[2023-07-24 07:08:15.417 +02:00] [ERR] [49] Emby.Server.Implementations.Library.LibraryManager: Error running post-scan task
System.ArgumentException: Not enough valid pictures provided to create a splashscreen!
   at Jellyfin.Drawing.Skia.SplashscreenBuilder.GenerateCollage(IReadOnlyList`1 posters, IReadOnlyList`1 backdrops)
   at Jellyfin.Drawing.Skia.SplashscreenBuilder.GenerateSplash(IReadOnlyList`1 posters, IReadOnlyList`1 backdrops, String outputPath)
   at Jellyfin.Drawing.Skia.SkiaEncoder.CreateSplashscreen(IReadOnlyList`1 posters, IReadOnlyList`1 backdrops)
   at Emby.Server.Implementations.Library.SplashscreenPostScanTask.Run(IProgress`1 progress, CancellationToken cancellationToken)
   at Emby.Server.Implementations.Library.LibraryManager.RunPostScanTasks(IProgress`1 progress, CancellationToken cancellationToken)
[2023-07-24 07:08:15.518 +02:00] [INF] [49] Emby.Server.Implementations.ScheduledTasks.TaskManager: "Scanner la médiathèque" Completed after 0 minute(s) and 1 seconds
[2023-07-24 07:08:15.520 +02:00] [INF] [49] Emby.Server.Implementations.ScheduledTasks.TaskManager: ExecuteQueuedTasks
[2023-07-24 07:08:15.579 +02:00] [INF] [11] Emby.Server.Implementations.IO.LibraryMonitor: Watching directory "/data/media"
[2023-07-24 19:08:13.873 +02:00] [INF] [58] Emby.Server.Implementations.ScheduledTasks.TaskManager: "IntervalTrigger" fired for task: "Scanner la médiathèque"
[2023-07-24 19:08:13.874 +02:00] [INF] [58] Emby.Server.Implementations.ScheduledTasks.TaskManager: Queuing task "RefreshMediaLibraryTask"
[2023-07-24 19:08:13.874 +02:00] [INF] [71] Emby.Server.Implementations.ScheduledTasks.TaskManager: Executing "Scanner la médiathèque"
[2023-07-24 19:08:13.874 +02:00] [INF] [71] Emby.Server.Implementations.IO.LibraryMonitor: Stopping directory watching for path "/data/media"
[2023-07-24 19:08:13.875 +02:00] [INF] [71] Emby.Server.Implementations.Library.LibraryManager: Validating media library
[2023-07-24 19:08:14.031 +02:00] [ERR] [71] Emby.Server.Implementations.Library.LibraryManager: Error running post-scan task
System.ArgumentException: Not enough valid pictures provided to create a splashscreen!
   at Jellyfin.Drawing.Skia.SplashscreenBuilder.GenerateCollage(IReadOnlyList`1 posters, IReadOnlyList`1 backdrops)
   at Jellyfin.Drawing.Skia.SplashscreenBuilder.GenerateSplash(IReadOnlyList`1 posters, IReadOnlyList`1 backdrops, String outputPath)
   at Jellyfin.Drawing.Skia.SkiaEncoder.CreateSplashscreen(IReadOnlyList`1 posters, IReadOnlyList`1 backdrops)
   at Emby.Server.Implementations.Library.SplashscreenPostScanTask.Run(IProgress`1 progress, CancellationToken cancellationToken)
   at Emby.Server.Implementations.Library.LibraryManager.RunPostScanTasks(IProgress`1 progress, CancellationToken cancellationToken)
[2023-07-24 19:08:14.038 +02:00] [INF] [71] Emby.Server.Implementations.ScheduledTasks.TaskManager: "Scanner la médiathèque" Completed after 0 minute(s) and 0 seconds
[2023-07-24 19:08:14.039 +02:00] [INF] [71] Emby.Server.Implementations.ScheduledTasks.TaskManager: ExecuteQueuedTasks
[2023-07-24 19:08:14.097 +02:00] [INF] [58] Emby.Server.Implementations.IO.LibraryMonitor: Watching directory "/data/media"
[2023-07-24 20:14:52.304 +02:00] [INF] [88] Emby.Server.Implementations.ScheduledTasks.TaskManager: "IntervalTrigger" fired for task: "Mettre à jour les extensions"
[2023-07-24 20:14:52.304 +02:00] [INF] [88] Emby.Server.Implementations.ScheduledTasks.TaskManager: Queuing task "PluginUpdateTask"
[2023-07-24 20:14:52.306 +02:00] [INF] [63] Emby.Server.Implementations.ScheduledTasks.TaskManager: Executing "Mettre à jour les extensions"
[2023-07-24 20:15:02.341 +02:00] [ERR] [91] Emby.Server.Implementations.Updates.InstallationManager: An error occurred while accessing the plugin manifest: "https://repo.jellyfin.org/releases/plugin/manifest-stable.json"
System.Net.Http.HttpRequestException: Resource temporarily unavailable (repo.jellyfin.org:443)
 ---> System.Net.Sockets.SocketException (11): Resource temporarily unavailable
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|277_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(HttpRequestMessage request)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.DecompressionHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at System.Net.Http.Json.HttpClientJsonExtensions.GetFromJsonAsyncCore[T](Task`1 taskResponse, JsonSerializerOptions options, CancellationToken cancellationToken)
   at Emby.Server.Implementations.Updates.InstallationManager.GetPackages(String manifestName, String manifest, Boolean filterIncompatible, CancellationToken cancellationToken)
[2023-07-24 20:15:02.384 +02:00] [INF] [91] Emby.Server.Implementations.ScheduledTasks.TaskManager: "Mettre à jour les extensions" Completed after 0 minute(s) and 10 seconds
[2023-07-24 20:15:02.390 +02:00] [INF] [91] Emby.Server.Implementations.ScheduledTasks.TaskManager: ExecuteQueuedTasks
[2023-07-24 22:47:21.607 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: "IntervalTrigger" fired for task: "Vider le répertoire cache"
[2023-07-24 22:47:21.607 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: Queuing task "DeleteCacheFileTask"
[2023-07-24 22:47:21.607 +02:00] [INF] [38] Emby.Server.Implementations.ScheduledTasks.TaskManager: Executing "Vider le répertoire cache"
[2023-07-24 22:47:21.609 +02:00] [INF] [38] Emby.Server.Implementations.ScheduledTasks.TaskManager: "Vider le répertoire cache" Completed after 0 minute(s) and 0 seconds
[2023-07-24 22:47:21.610 +02:00] [INF] [38] Emby.Server.Implementations.ScheduledTasks.TaskManager: ExecuteQueuedTasks
[2023-07-24 22:47:21.701 +02:00] [INF] [38] Emby.Server.Implementations.ScheduledTasks.TaskManager: "IntervalTrigger" fired for task: "Nettoyer le répertoire des journaux"
[2023-07-24 22:47:21.702 +02:00] [INF] [38] Emby.Server.Implementations.ScheduledTasks.TaskManager: Queuing task "DeleteLogFileTask"
[2023-07-24 22:47:21.702 +02:00] [INF] [44] Emby.Server.Implementations.ScheduledTasks.TaskManager: Executing "Nettoyer le répertoire des journaux"
[2023-07-24 22:47:21.703 +02:00] [INF] [44] Emby.Server.Implementations.ScheduledTasks.TaskManager: "Nettoyer le répertoire des journaux" Completed after 0 minute(s) and 0 seconds
[2023-07-24 22:47:21.704 +02:00] [INF] [44] Emby.Server.Implementations.ScheduledTasks.TaskManager: ExecuteQueuedTasks
[2023-07-24 22:47:21.765 +02:00] [INF] [44] Emby.Server.Implementations.ScheduledTasks.TaskManager: "IntervalTrigger" fired for task: "Nettoyer les dossier des transcodages"
[2023-07-24 22:47:21.766 +02:00] [INF] [44] Emby.Server.Implementations.ScheduledTasks.TaskManager: Queuing task "DeleteTranscodeFileTask"
[2023-07-24 22:47:21.766 +02:00] [INF] [44] Emby.Server.Implementations.ScheduledTasks.TaskManager: Executing "Nettoyer les dossier des transcodages"
[2023-07-24 22:47:21.766 +02:00] [INF] [44] Emby.Server.Implementations.ScheduledTasks.TaskManager: "Nettoyer les dossier des transcodages" Completed after 0 minute(s) and 0 seconds
[2023-07-24 22:47:21.767 +02:00] [INF] [44] Emby.Server.Implementations.ScheduledTasks.TaskManager: ExecuteQueuedTasks
[2023-07-24 22:47:21.826 +02:00] [INF] [44] Emby.Server.Implementations.ScheduledTasks.TaskManager: "IntervalTrigger" fired for task: "Télécharger les sous-titres manquants"
[2023-07-24 22:47:21.827 +02:00] [INF] [44] Emby.Server.Implementations.ScheduledTasks.TaskManager: Queuing task "SubtitleScheduledTask"
[2023-07-24 22:47:21.827 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: Executing "Télécharger les sous-titres manquants"
[2023-07-24 22:47:21.827 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: "Télécharger les sous-titres manquants" Completed after 0 minute(s) and 0 seconds
[2023-07-24 22:47:21.829 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: ExecuteQueuedTasks
[2023-07-24 22:47:21.917 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: "IntervalTrigger" fired for task: "TasksRefreshChannels"
[2023-07-24 22:47:21.918 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: Queuing task "RefreshChannelsScheduledTask"
[2023-07-24 22:47:21.918 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: Executing "TasksRefreshChannels"
[2023-07-24 22:47:21.921 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: "TasksRefreshChannels" Completed after 0 minute(s) and 0 seconds
[2023-07-24 22:47:21.923 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: ExecuteQueuedTasks
[2023-07-24 22:47:22.217 +02:00] [INF] [38] Emby.Server.Implementations.ScheduledTasks.TaskManager: "IntervalTrigger" fired for task: "Optimiser la base de données"
[2023-07-24 22:47:22.217 +02:00] [INF] [38] Emby.Server.Implementations.ScheduledTasks.TaskManager: Queuing task "OptimizeDatabaseTask"
[2023-07-24 22:47:22.217 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: Executing "Optimiser la base de données"
[2023-07-24 22:47:22.218 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.Tasks.OptimizeDatabaseTask: Optimizing and vacuuming jellyfin.db...
[2023-07-24 22:47:22.253 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.Tasks.OptimizeDatabaseTask: jellyfin.db optimized successfully!
[2023-07-24 22:47:22.253 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: "Optimiser la base de données" Completed after 0 minute(s) and 0 seconds
[2023-07-24 22:47:22.255 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: ExecuteQueuedTasks
[2023-07-24 22:47:25.197 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: "IntervalTrigger" fired for task: "Refresh Guide"
[2023-07-24 22:47:25.198 +02:00] [INF] [60] Emby.Server.Implementations.ScheduledTasks.TaskManager: Queuing task "RefreshGuideScheduledTask"
[2023-07-24 22:47:25.198 +02:00] [INF] [44] Emby.Server.Implementations.ScheduledTasks.TaskManager: Executing "Refresh Guide"
[2023-07-24 22:47:28.202 +02:00] [INF] [44] Emby.Server.Implementations.LiveTv.LiveTvManager: Refreshing guide with 7 days of guide data
[2023-07-24 22:47:28.203 +02:00] [INF] [44] Emby.Server.Implementations.ScheduledTasks.TaskManager: "Refresh Guide" Completed after 0 minute(s) and 3 seconds
[2023-07-24 22:47:28.205 +02:00] [INF] [44] Emby.Server.Implementations.ScheduledTasks.TaskManager: ExecuteQueuedTasks
